name: Publish in GitHub Package Registry

permissions:
 id-token: write
 contents: read

on:  
  push:
    tags:
      - '**'

jobs:  
  docker_build_release_candidate:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.ref, '-rc') }}
    steps:
      - uses: actions/checkout@v3
      - name: Set variables
        id: vars
        run: |
          echo "module=$(echo ${GITHUB_REF#refs/*/} | cut -d '/' -f 1)" >> $GITHUB_OUTPUT
          echo "version=$(echo ${GITHUB_REF#refs/*/} | cut -d '/' -f 2)" >> $GITHUB_OUTPUT
      - name: Check output
        run: |
          echo ${{ steps.vars.outputs.module }} 
          echo ${{ steps.vars.outputs.version }}
      - name: docker build on enum-worker
        if: ${{ contains(steps.vars.outputs.module, 'enum-worker') }}
        run: echo 'nok'
      - name: docker build on root-publisher
        if: ${{ contains(steps.vars.outputs.module, 'test') }}
        run: echo 'ok'
      - name: Import secrets from Vault
        id: secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: https://vault.factory.adeo.cloud
          namespace: "adeo/gtdp-amass"
          method: jwt
          path: github-actions
          role: ${{ github.event.repository.name }}
          secrets: | 
            secret/data/github-actions jfrog_user | user ;
            secret/data/github-actions jfrog_password | password; 
        
  docker_build_release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.ref, '-rc') }}
    steps:
      - uses: actions/checkout@v3
      - name: Set variables
        id: vars
        run: |
          echo "module=$(echo ${GITHUB_REF#refs/*/} | cut -d '/' -f 1)" >> $GITHUB_OUTPUT
          echo "version=$(echo ${GITHUB_REF#refs/*/} | cut -d '/' -f 2)" >> $GITHUB_OUTPUT
      - name: Check output
        run: |
          echo ${{ steps.vars.outputs.module }} 
          echo ${{ steps.vars.outputs.version }}
      - name: docker build on enum-worker
        if: ${{ contains(steps.vars.outputs.module, 'enum-worker') }}
        run: echo 'nok'
      - name: docker build on root-publisher
        if: ${{ contains(steps.vars.outputs.module, 'test') }}
        run: echo 'ok'
